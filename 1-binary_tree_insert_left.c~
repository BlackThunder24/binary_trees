#include "binary_trees.h"

/**
 * binary_tree_insert_left - inserts a node as the left-child of another node
 * @parent: node to insert the left child
 * @value: value of the new node
 * Return: Pointer to the new node, or NULL on failure
 * If parent already has a left-child, the new node must take its place,
 * and the old left-child must be set as the left-child of the new node
 */
binary_tree_t *binary_tree_insert_left(binary_tree_t *parent, int value)
{
  binary_tree_t *new = NULL;

  if (parent == NULL)
    return (NULL);

  new = malloc(sizeof(binary_tree_t));
  if (new == NULL)
    return (NULL);

  new->parent = parent;
  new->n = value;
  new->right = NULL;
  new->left = NULL;

  if (parent->left != NULL)
    {
      new->left = parent->left;
      parent->left->parent = new;
      parent->left = new;
    }
  else
    parent->left = new;

  return (new);
}
